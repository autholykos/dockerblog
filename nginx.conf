daemon off;

user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    # Since the target OS machine runs Ubuntu we can rely on epoll
    use epoll;
    # 512 connections are the default. I like to make things explicit though
    worker_connections 512;
    # multi_accept on
}

http {
    
    ################
    # Basic settings
    ################
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    access_log off;

    error_log /var/log/nginx/error.log;

    ##############################
    # GZIPping transmitted content
    ##############################
    gzip on;

    # compressing small packages is not beneficial and consumes CPU
    gzip_min_length 256;

    # setting compression level (Levels go from 1 to 9)
    gzip_comp_level 3;

    # what should we compress?
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ##################
    # Caching metadata
    ##################
    
    # Caching metadata (like open file descriptors, file descriptors modification time, error stata)
    # max stands for max entries in the cache and inactive is the maximum time before removing the entry
    open_file_cache max=10000 inactive=30;

    # validity of cache entry
    open_file_cache_valid 60s;

    # minimum access before inactive number of seconds resets
    open_file_cache_min_uses 2;

    # cache errors while searching a file
    open_file_cache_errors on;

    ##############################
    # Keepalive and advanced stuff
    ##############################

    # Limit the total number of requests that can be served through a keepalive connection
    keepalive_requests 200;
    reset_timedout_connection on;
    # With the sendfile() zero-copy approach, the data is read immediately from the disk into the OS cache memory 
    # using Direct Memory Access (DMA) hardware and no context switch
    sendfile on;
    # send all headers in a single packet instead of separate ones
    tcp_nopush on;

    ################################################
    # Where to find server application configuration
    ################################################

    include /etc/nginx/conf.d/*.conf;
}
